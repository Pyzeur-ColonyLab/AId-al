version: '3.8'

services:
  bot:
    build: .
    container_name: universal_ai_bot
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
    volumes:
      - ./models/saved_models:/app/models/saved_models
      - ./data:/app/data
      - huggingface_cache:/tmp/huggingface
      - transformers_cache:/tmp/transformers_cache
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - bot_network
    deploy:
      resources:
        limits:
          memory: 6G  # Adjust based on your model size
        reservations:
          memory: 2G

  postgres:
    image: postgres:15-alpine
    container_name: universal_ai_db
    environment:
      POSTGRES_USER: ${DB_USER:-botuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-botpass}
      POSTGRES_DB: ${DB_NAME:-aibot_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - bot_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-botuser} -d ${DB_NAME:-aibot_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: universal_ai_cache
    restart: unless-stopped
    networks:
      - bot_network
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

networks:
  bot_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  huggingface_cache:
  transformers_cache:
